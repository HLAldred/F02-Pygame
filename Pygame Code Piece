#-----------------
#FP4-F02-Pygame
#Hailey-lynn Aldred
#15 May 2025
#-----------------

import pygame
import random

WIDTH = 800
HEIGHT = 600
#i experimented with the values for height and width and i like the preset ones from the lesson
SKYBLUE = (77, 154, 253) #shout out to RapidTables
HONEYYELLOW = (225, 204, 3) #also from RapidTables
LIGHTPINK = (255, 204, 229) #RapidTables
RANDCOLOUR = (4, 81, 190) #I made this up and have no idea what it's going to look like
YELLOW_DISKS = 3 #number that are drawn
PINK_DISKS = 3
RAND_DISKS = 3

game_display = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("TEHE CIRCLES")
clock = pygame.time.Clock() #honestly not sure what this does but I assume its important

class Disk():
    def __init__(self, colour, x_boundary, y_boundary, size_range=(4,20), movement_range=(4,6)): #altered the movement range and size range to see what happens
        self.size = random.randrange(size_range[0], size_range[1]) #don't really understand the 0 and 1
        self.colour = colour
        self.x_boundary = x_boundary #boundaries are important bc all my blobs ran away when i tested the lesson code without them
        self.y_boundary = y_boundary
        self.x  = random.randrange(0, self.x_boundary)
        self.y = random.randrange(0, self.y_boundary)
        self.movement_range = movement_range
        
    def move(self):
        self.move_x = random.randrange(self.movement_range[0],self.movement_range[1])
        self.move_y = random.randrange(self.movement_range[0],self.movement_range[1])
        self.x += self.move_x
        self.y += self.move_y
        
    def check_boundaries(self): #again, important for keeping my circles on the screen
        if self.x < 0: self.x = 0
        elif self.x > self.x_boundary: self.x = self.x_boundary
            
        if self.y < 0: self.y = 0
        elif self.y > self.y_boundary: self.y = self.y_boundary
        
        
def environment(disk_list):
    game_display.fill(SKYBLUE)
    for disk_dict in disk_list:
        for disk_id in disk_dict:
            disk = disk_dict[disk_id]
            pygame.draw.circle(game_display, disk.colour, [disk.x, disk.y], disk.size)
            disk.move()
            disk.check_boundaries()
    pygame.display.update()
    
def main():
    yellow_disks = dict(enumerate([Disk(HONEYYELLOW, WIDTH, HEIGHT) for i in range(YELLOW_DISKS)]))
    pink_disks = dict(enumerate([Disk(LIGHTPINK, WIDTH, HEIGHT) for i in range(PINK_DISKS)]))
    rand_disks = dict(enumerate([Disk(RANDCOLOUR, WIDTH, HEIGHT) for i in range(RAND_DISKS)]))
    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()
        environment([yellow_disks, pink_disks, rand_disks])
        clock.tick(60)
        
#-------------------------
if __name__ == '__main__':
    main()
    
#not sure why all my disks are going into one corner but yk
